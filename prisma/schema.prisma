// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  name String
  password String
  isAdmin Boolean @default(false)
  createdAt DateTime @default(now())
}

model Models {
  id String @id @default(uuid())
  name String
  molding Int
  pilot Int
  graduation Int
  stylist Int
  quantity Int
  productionPrice Int
  taxes Float
  tissues ModelTissues[]
  dispatch ModelDispatch[]
  aviation ModelAviation[]
}

model ModelTissues {
  @@id([modelId, tissueId])
  modelId String
  tissueId String
  meters Int
  model Models @relation(fields: [modelId], references: [id], onDelete: Cascade) 
  tissue Tissues @relation(fields: [tissueId], references: [id], onDelete: Cascade) 
}


model Tissues {
  id String @id @default(uuid())
  name String
  price Int
  models ModelTissues[]
}

model ModelDispatch {
  @@id([modelId, dispatchId])
  modelId String
  dispatchId String
  quantity Int
  model Models @relation(fields: [modelId], references: [id], onDelete: Cascade) 
  dispatch Dispatchs @relation(fields: [dispatchId], references: [id], onDelete: Cascade)
}

model Dispatchs {
  id String @id @default(uuid())
  name String
  price Int
  models ModelDispatch[]
}

model ModelAviation {
  @@id([modelId, aviationId])
  modelId String
  aviationId String
  quantity Int
  model Models @relation(fields: [modelId], references: [id], onDelete: Cascade) 
  aviation Aviation @relation(fields: [aviationId], references: [id], onDelete: Cascade)
}

model Aviation {
  id String @id @default(uuid())
  name String
  price Int
  aviations ModelAviation[]
}